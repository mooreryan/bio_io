{0 Bio_io}

{{:https://github.com/mooreryan/bio_io/actions/workflows/build_and_test.yml}{%html:
<img
src="https://github.com/mooreryan/bio_io/actions/workflows/build_and_test.yml/badge.svg?branch=main"
alt="Build and test"/> %}}
{{:https://coveralls.io/github/mooreryan/bio_io?branch=main}{%html:
<img
src="https://coveralls.io/repos/github/mooreryan/bio_io/badge.svg?branch=main"
alt="Coverage Status"/> %}}

{b {{!Bio_io} The full API is browsable here}}.

[Bio_io] is an OCaml library that provides programmatic access to
common file formats used in bioinformatics like FASTA files.

If you have any issues or find any bugs, open an issue on the
{{:https://github.com/mooreryan/bio_io/issues} GitHub page}.

{1 License}

{{:https://github.com/mooreryan/bio_io}{%html: <img
src="https://img.shields.io/badge/license-MIT%20or%20Apache%202.0-blue"
alt="license MIT or Apache 2.0"/> %}}

Licensed under the Apache License, Version 2.0 or the MIT license, at
your option. This program may not be copied, modified, or distributed
except according to those terms.

{1 Overview}

The [Bio_io] library provides input channels that return records.

For an overview see the [Record_in_channel.S] module signature.  In
fact, all the [In_channels] in this library satisfy this signature.

The [Fasta] module provides a [Record] and [In_channel] for reading
FASTA files.

There are modules for reading "delimited" files like those output by
[Btab] and [Mmseqs].

{1 Extending Bio_io}

The [Record_in_channel.Make] functor can be used to make new
specialized [Record_in_chnanels].  To do so, you need a module that
satisfies the [Record_in_channel.In_channel_input_record] signature.
[Bio_io] has a couple of In_channel types in the [Private] module you
can use for this, and then add in the [input_record_exn] function.

For examples of this, see the definitions of [Fasta.In_channel] and
[Mmseqs.In_channel].